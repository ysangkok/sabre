# Makefile.in generated automatically by automake 1.3 from Makefile.am

# Copyright (C) 1994, 1995, 1996, 1997, 1998 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

# This is part of Dan Hammer's SABRE Fighter Plane Simulator
# portions donated by Antti Barck


SHELL = /bin/sh

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DISTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
CC = @CC@
CXX = @CXX@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
REV_DATE = @REV_DATE@
VERSION = @VERSION@

AUTOMAKE_OPTIONS = foreign
bin_PROGRAMS = sabre
sabre_SOURCES = main.C game.C scnedit.C vga_13.C vmath.C traveler.C pen.C \
		transblt.C port_3d.C clip.C cpoly.C obj_3d.C group_3d.C \
		copoly.C txtrmap.C bits.C convpoly.C rendpoly.C rndrpoly.C \
		rndzpoly.C zview.C rotate.C terrain.C earth.C colormap.C \
		dvector.C flight.C weapons.C pilot.C fltlite.C \
		moveable.C unguided.C fltzview.C viewobj.C fltmngr.C \
		grndunit.C font8x8.C plltt.C input.C key_map.C linux_joy.C \
		kbdhit.C siminput.C simfile.C hud.C cockpit.C instrmnt.C \
		ppm.C mytimer.C colorspc.C globals.C portkey.C vtable2.C \
		led2.C aaaunit.C waypoint.C fltobj.C simfilex.C simmath.C \
		target.C sbrkeys.C aibase.C aiflite.C aigunner.C aipilot.C \
		aipilot2.C aipilot3.C aipilot4.C aipilot5.C aipilot6.C sairfld.C \
		sarray.C sattkr.C sfltmdl.C sfrmtn.C smath.C smnvrst.C \
		spilcaps.C splncaps.C srunway.C sslewer.C stact.C starget.C \
                sweapon.C sbfltmdl.C simsnd.C dhlist.c stime.c spid.c pilobj.C
sabre_LDADD = ../libzip/libcomp.a ../libzip/libuncl.a ../gdev/libgdev.a
EXTRA_DIST = *.h *.c
INCLUDES=-I../gdev -I../libzip
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_CLEAN_FILES = 
PROGRAMS =  $(bin_PROGRAMS)


DEFS = @DEFS@ -I. -I$(srcdir) 
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
sabre_OBJECTS =  main.o game.o scnedit.o vga_13.o vmath.o traveler.o \
pen.o transblt.o port_3d.o clip.o cpoly.o obj_3d.o group_3d.o copoly.o \
txtrmap.o bits.o convpoly.o rendpoly.o rndrpoly.o rndzpoly.o zview.o \
rotate.o terrain.o earth.o colormap.o dvector.o flight.o weapons.o \
pilot.o fltlite.o moveable.o unguided.o fltzview.o viewobj.o fltmngr.o \
grndunit.o font8x8.o plltt.o input.o key_map.o linux_joy.o kbdhit.o \
siminput.o simfile.o hud.o cockpit.o instrmnt.o ppm.o mytimer.o \
colorspc.o globals.o portkey.o vtable2.o led2.o aaaunit.o waypoint.o \
fltobj.o simfilex.o simmath.o target.o sbrkeys.o aibase.o aiflite.o \
aigunner.o aipilot.o aipilot2.o aipilot3.o aipilot4.o aipilot5.o \
aipilot6.o sairfld.o sarray.o sattkr.o sfltmdl.o sfrmtn.o smath.o \
smnvrst.o spilcaps.o splncaps.o srunway.o sslewer.o stact.o starget.o \
sweapon.o sbfltmdl.o simsnd.o dhlist.o stime.o spid.o pilobj.o
sabre_DEPENDENCIES =  ../libzip/libcomp.a ../libzip/libuncl.a \
../gdev/libgdev.a
sabre_LDFLAGS = 
CXXFLAGS = @CXXFLAGS@
CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CXXFLAGS)
CXXLINK = $(CXX) $(CXXFLAGS) $(LDFLAGS) -o $@
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS)
LINK = $(CC) $(CFLAGS) $(LDFLAGS) -o $@
DIST_COMMON =  COPYING Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = tar
GZIP = --best
SOURCES = $(sabre_SOURCES)
OBJECTS = $(sabre_OBJECTS)

all: Makefile $(PROGRAMS)

.SUFFIXES:
.SUFFIXES: .C .S .c .o .s
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && $(AUTOMAKE) --foreign --include-deps src/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-binPROGRAMS:

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

distclean-binPROGRAMS:

maintainer-clean-binPROGRAMS:

install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo "  $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed '$(transform)'`"; \
	     $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed '$(transform)'`; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	list='$(bin_PROGRAMS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(bindir)/`echo $$p|sed '$(transform)'`; \
	done

.c.o:
	$(COMPILE) -c $<

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

sabre: $(sabre_OBJECTS) $(sabre_DEPENDENCIES)
	@rm -f sabre
	$(CXXLINK) $(sabre_LDFLAGS) $(sabre_OBJECTS) $(sabre_LDADD) $(LIBS)
.C.o:
	$(CXXCOMPILE) -c $<

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $(SOURCES) $(HEADERS) $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = src

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  test -f $(distdir)/$$file \
	  || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	  || cp -p $$d/$$file $(distdir)/$$file; \
	done
game.o: game.C sim.h rtkey.h siminc.h simerr.h simfile.h colorspc.h \
	font8x8.h defs.h grafix.h colormap.h vga_13.h traveler.h pen.h \
	transblt.h vmath.h port_3d.h clip.h target.h cpoly.h rendpoly.h \
	convpoly.h rndrpoly.h txtrmap.h clstypes.h obj_3d.h group_3d.h \
	copoly.h bits.h rndzpoly.h zview.h rotate.h dvmath.h flight.h \
	fltobj.h spid.h smath.h fltlite.h viewobj.h moveable.h \
	weapons.h unguided.h fltzview.h pilot.h aipilot.h sobject.h \
	stypes.h sarray.h sfltmdl.h sslewer.h scntrl.h starget.h \
	stact.h splncaps.h spilcaps.h sweapon.h smnvrst.h swaypnt.h \
	sattkr.h dhlist.h aigunner.h aibase.h aicomm.h sbfltmdl.h \
	pilobj.h fltmngr.h grndunit.h instrmnt.h cockpit.h hud.h \
	input.h linux_joy.h pc_keys.h kbdhit.h key_map.h siminput.h \
	sbrvkeys.h portkey.h earth.h terrain.h plltt.h mytimer.h \
	globals.h simsnd.h game.h stime.h sfrmtn.h
linux_joy.o: linux_joy.C linux_joy.h
main.o: main.C siminc.h simerr.h sim.h rtkey.h simfile.h colorspc.h \
	font8x8.h defs.h grafix.h colormap.h vga_13.h traveler.h pen.h \
	transblt.h vmath.h port_3d.h clip.h target.h cpoly.h rendpoly.h \
	convpoly.h rndrpoly.h txtrmap.h clstypes.h obj_3d.h group_3d.h \
	copoly.h bits.h rndzpoly.h zview.h rotate.h dvmath.h flight.h \
	fltobj.h spid.h smath.h fltlite.h viewobj.h moveable.h \
	weapons.h unguided.h fltzview.h pilot.h aipilot.h sobject.h \
	stypes.h sarray.h sfltmdl.h sslewer.h scntrl.h starget.h \
	stact.h splncaps.h spilcaps.h sweapon.h smnvrst.h swaypnt.h \
	sattkr.h dhlist.h aigunner.h aibase.h aicomm.h sbfltmdl.h \
	pilobj.h fltmngr.h grndunit.h instrmnt.h cockpit.h hud.h \
	input.h linux_joy.h pc_keys.h kbdhit.h key_map.h siminput.h \
	sbrvkeys.h portkey.h earth.h terrain.h plltt.h mytimer.h \
	globals.h simsnd.h game.h scnedit.h sbrkeys.h
siminput.o: siminput.C defs.h pc_keys.h key_map.h vmath.h port_3d.h \
	vga_13.h grafix.h clip.h rtkey.h sim.h cpoly.h target.h \
	rendpoly.h convpoly.h rndrpoly.h txtrmap.h colormap.h \
	clstypes.h obj_3d.h copoly.h input.h linux_joy.h simfile.h \
	simerr.h flight.h dvmath.h fltobj.h spid.h smath.h fltlite.h \
	weapons.h pilot.h aipilot.h sobject.h stypes.h sarray.h \
	sfltmdl.h sslewer.h scntrl.h starget.h stact.h splncaps.h \
	spilcaps.h sweapon.h smnvrst.h swaypnt.h sattkr.h dhlist.h \
	aigunner.h aibase.h aicomm.h sbfltmdl.h pilobj.h zview.h \
	fltzview.h unguided.h viewobj.h moveable.h fltmngr.h terrain.h \
	kbdhit.h siminput.h sbrvkeys.h globals.h

info:
dvi:
check: all
	$(MAKE)
installcheck:
install-exec: install-binPROGRAMS
	@$(NORMAL_INSTALL)

install-data: 
	@$(NORMAL_INSTALL)

install: install-exec install-data all
	@:

uninstall: uninstall-binPROGRAMS

install-strip:
	$(MAKE) INSTALL_PROGRAM='$(INSTALL_PROGRAM) -s' INSTALL_SCRIPT='$(INSTALL_PROGRAM)' install
installdirs:
	$(mkinstalldirs)  $(DATADIR)$(bindir)


mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(DISTCLEANFILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
mostlyclean:  mostlyclean-binPROGRAMS mostlyclean-compile \
		mostlyclean-tags mostlyclean-generic

clean:  clean-binPROGRAMS clean-compile clean-tags clean-generic \
		mostlyclean

distclean:  distclean-binPROGRAMS distclean-compile distclean-tags \
		distclean-generic clean
	-rm -f config.status

maintainer-clean:  maintainer-clean-binPROGRAMS maintainer-clean-compile \
		maintainer-clean-tags maintainer-clean-generic \
		distclean
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

.PHONY: mostlyclean-binPROGRAMS distclean-binPROGRAMS clean-binPROGRAMS \
maintainer-clean-binPROGRAMS uninstall-binPROGRAMS install-binPROGRAMS \
mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile tags mostlyclean-tags distclean-tags \
clean-tags maintainer-clean-tags distdir info dvi installcheck \
install-exec install-data install uninstall all installdirs \
mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
